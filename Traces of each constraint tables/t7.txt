Do you want to test a constraint table? Answer by y or n : y


Which table do you want to work with? Please enter a number between 1 and 14 : 7


The data have been successfully stored in memory!

#############################  Table : 7  ################################

The number of vertices is :  12 (after adding 2 fictional tasks 0 and 11 )

The number of edges is :  16

The graph in form of triplets is :

4 -> 1 = 4
10 -> 1 = 10
7 -> 2 = 7
6 -> 3 = 6
0 -> 4 = 0
4 -> 5 = 4
0 -> 6 = 0
0 -> 7 = 0
5 -> 8 = 5
7 -> 8 = 7
1 -> 9 = 1
3 -> 9 = 3
8 -> 9 = 8
6 -> 10 = 6
2 -> 11 = 2
9 -> 11 = 9

The adjacency matrix is :

+----+---+----+---+---+---+---+---+---+---+---+----+----+
| .  | 0 | 1  | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 |
+----+---+----+---+---+---+---+---+---+---+---+----+----+
| 0  | . | .  | . | . | 0 | . | 0 | 0 | . | . | .  | .  |
| 1  | . | .  | . | . | . | . | . | . | . | 1 | .  | .  |
| 2  | . | .  | . | . | . | . | . | . | . | . | .  | 2  |
| 3  | . | .  | . | . | . | . | . | . | . | 3 | .  | .  |
| 4  | . | 4  | . | . | . | 4 | . | . | . | . | .  | .  |
| 5  | . | .  | . | . | . | . | . | . | 5 | . | .  | .  |
| 6  | . | .  | . | 6 | . | . | . | . | . | . | 6  | .  |
| 7  | . | .  | 7 | . | . | . | . | . | 7 | . | .  | .  |
| 8  | . | .  | . | . | . | . | . | . | . | 8 | .  | .  |
| 9  | . | .  | . | . | . | . | . | . | . | . | .  | 9  |
| 10 | . | 10 | . | . | . | . | . | . | . | . | .  | .  |
| 11 | . | .  | . | . | . | . | . | . | . | . | .  | .  |
+----+---+----+---+---+---+---+---+---+---+---+----+----+

* Detecting a cycle 

* Method of eliminating entry points : 

The current source vertice is : [0]
The vertice list before elimination looks like : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]

Selected entry points = [0]
Eliminating entry points [0]...
The current list of remaining vertices is : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].
Remaining sources vertices : [4, 6, 7]

Selected entry points = [4]
Eliminating entry points [4]...
The current list of remaining vertices is : [1, 2, 3, 5, 6, 7, 8, 9, 10, 11].
Remaining sources vertices : [6, 7, 5]

Selected entry points = [6]
Eliminating entry points [6]...
The current list of remaining vertices is : [1, 2, 3, 5, 7, 8, 9, 10, 11].
Remaining sources vertices : [7, 5, 3, 10]

Selected entry points = [7]
Eliminating entry points [7]...
The current list of remaining vertices is : [1, 2, 3, 5, 8, 9, 10, 11].
Remaining sources vertices : [5, 3, 10, 2]

Selected entry points = [5]
Eliminating entry points [5]...
The current list of remaining vertices is : [1, 2, 3, 8, 9, 10, 11].
Remaining sources vertices : [3, 10, 2, 8]

Selected entry points = [3]
Eliminating entry points [3]...
The current list of remaining vertices is : [1, 2, 8, 9, 10, 11].
Remaining sources vertices : [10, 2, 8]

Selected entry points = [10]
Eliminating entry points [10]...
The current list of remaining vertices is : [1, 2, 8, 9, 11].
Remaining sources vertices : [2, 8, 1]

Selected entry points = [2]
Eliminating entry points [2]...
The current list of remaining vertices is : [1, 8, 9, 11].
Remaining sources vertices : [8, 1]

Selected entry points = [8]
Eliminating entry points [8]...
The current list of remaining vertices is : [1, 9, 11].
Remaining sources vertices : [1]

Selected entry points = [1]
Eliminating entry points [1]...
The current list of remaining vertices is : [9, 11].
Remaining sources vertices : [9]

Selected entry points = [9]
Eliminating entry points [9]...
The current list of remaining vertices is : [11].
Remaining sources vertices : [11]

Selected entry points = [11]
Eliminating entry points [11]...
Remaining vertices : None
Method of eliminating vertices finished

There is no cycle and no negative edges thus : âœ… The graph is a valid scheduling graph.  Proceeding with scheduling calculation...


ðŸ“Š Ranks of the vertices:

Task 0: Rank 0
Task 1: Rank 3
Task 2: Rank 2
Task 3: Rank 2
Task 4: Rank 1
Task 5: Rank 2
Task 6: Rank 1
Task 7: Rank 1
Task 8: Rank 3
Task 9: Rank 4
Task 10: Rank 2
Task 11: Rank 5


Computing : earliest date, latest date, floats, critical path

+------+----------+----------------+--------------+-------+---------------+
| Task | Duration | Earliest Start | Latest Start | Float | Critical Path |
+------+----------+----------------+--------------+-------+---------------+
|  0   |    0     |       0        |      0       |   0   |      Yes      |
|  1   |    1     |       16       |      16      |   0   |      Yes      |
|  2   |    2     |       7        |      24      |   17  |       No      |
|  3   |    3     |       6        |      14      |   8   |       No      |
|  4   |    4     |       0        |      0       |   0   |      Yes      |
|  5   |    5     |       4        |      4       |   0   |      Yes      |
|  6   |    6     |       0        |      0       |   0   |      Yes      |
|  7   |    7     |       0        |      2       |   2   |       No      |
|  8   |    8     |       9        |      9       |   0   |      Yes      |
|  9   |    9     |       17       |      17      |   0   |      Yes      |
|  10  |    10    |       6        |      6       |   0   |      Yes      |
|  11  |    0     |       26       |      26      |   0   |      Yes      |
+------+----------+----------------+--------------+-------+---------------+
critical path(s): 0 â†’ 6 â†’ 10 â†’ 1 â†’ 9 â†’ 11
critical path(s): 0 â†’ 4 â†’ 5 â†’ 8 â†’ 9 â†’ 11

Scheduling analysis completed!

###################################################################################