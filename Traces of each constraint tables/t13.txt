Do you want to test a constraint table? Answer by y or n : y


Which table do you want to work with? Please enter a number between 1 and 14 : 13


The data have been successfully stored in memory!

#############################  Table : 13  ################################

The number of vertices is :  6 (after adding 2 fictional tasks 0 and 5 )

The number of edges is :  7

The graph in form of triplets is :

0 -> 1 = 0
1 -> 2 = 9
3 -> 2 = 4
0 -> 3 = 0
3 -> 4 = 4
2 -> 5 = 2
4 -> 5 = 7

The adjacency matrix is :

+---+---+---+---+---+---+---+
| . | 0 | 1 | 2 | 3 | 4 | 5 |
+---+---+---+---+---+---+---+
| 0 | . | 0 | . | 0 | . | . |
| 1 | . | . | 9 | . | . | . |
| 2 | . | . | . | . | . | 2 |
| 3 | . | . | 4 | . | 4 | . |
| 4 | . | . | . | . | . | 7 |
| 5 | . | . | . | . | . | . |
+---+---+---+---+---+---+---+

* Detecting a cycle 

* Method of eliminating entry points : 

The current source vertice is : [0]
The vertice list before elimination looks like : [0, 1, 2, 3, 4, 5]

Selected entry points = [0]
Eliminating entry points [0]...
The current list of remaining vertices is : [1, 2, 3, 4, 5].
Remaining sources vertices : [1, 3]

Selected entry points = [1]
Eliminating entry points [1]...
The current list of remaining vertices is : [2, 3, 4, 5].
Remaining sources vertices : [3]

Selected entry points = [3]
Eliminating entry points [3]...
The current list of remaining vertices is : [2, 4, 5].
Remaining sources vertices : [2, 4]

Selected entry points = [2]
Eliminating entry points [2]...
The current list of remaining vertices is : [4, 5].
Remaining sources vertices : [4]

Selected entry points = [4]
Eliminating entry points [4]...
The current list of remaining vertices is : [5].
Remaining sources vertices : [5]

Selected entry points = [5]
Eliminating entry points [5]...
Remaining vertices : None
Method of eliminating vertices finished

There is no cycle and no negative edges thus : âœ… The graph is a valid scheduling graph.  Proceeding with scheduling calculation...


ðŸ“Š Ranks of the vertices:

Task 0: Rank 0
Task 1: Rank 1
Task 2: Rank 2
Task 3: Rank 1
Task 4: Rank 2
Task 5: Rank 3


Computing : earliest date, latest date, floats, critical path

+------+----------+----------------+--------------+-------+---------------+
| Task | Duration | Earliest Start | Latest Start | Float | Critical Path |
+------+----------+----------------+--------------+-------+---------------+
|  0   |    0     |       0        |      0       |   0   |      Yes      |
|  1   |    9     |       0        |      0       |   0   |      Yes      |
|  2   |    2     |       9        |      9       |   0   |      Yes      |
|  3   |    4     |       0        |      0       |   0   |      Yes      |
|  4   |    7     |       4        |      4       |   0   |      Yes      |
|  5   |    0     |       11       |      11      |   0   |      Yes      |
+------+----------+----------------+--------------+-------+---------------+
critical path(s): 0 â†’ 1 â†’ 2 â†’ 5
critical path(s): 0 â†’ 3 â†’ 4 â†’ 5

Scheduling analysis completed!

###################################################################################